/**
 * Base button shared styles
 * Shared between regular and circle
 *
 */

@mixin button-shared {
	@include u-text-interface;
	display: block;
	border-width: $button-shared--border-width;
	border-style: $button-shared--border-style;
	position: relative;
	cursor: pointer;
	text-decoration: none;
	transition: $button-shared--transition;
}

/**
 * Regular button
 *
 */

// Base button styles
// No theme

@mixin button-base {
	@include button-shared;
	border-radius: $button-base--border-radius;
	text-align: $button-base--text-align;
	margin: 0;
	padding: $button-base--padding;
	width: 100%;
	line-height: $button-base--line-height;
}

// Add base button styles
// with optional theme styles on top

@mixin button($theme: false) {
	@include button-base;
	@if $theme {
		@include button-theme($theme);
	}
}

// Adding Icons

//@mixin button-icon-left {
//    > svg {
//        @include vertical-align('absolute');
//        left: 12px;
//        margin: 0;
//    }
//
//    > svg + span {
//        padding-left: spacing(16);
//    }
//}
//
//@mixin button-icon-right {
//    > svg {
//        @include vertical-align('absolute');
//        right: 12px;
//        margin: 0;
//    }
//
//    > span:last-child {
//        padding-right: spacing(16);
//    }
//}

/**
 * Circular button
 *
 */

// Add base button styles
// with optional theme styles on top

@mixin circle-button($theme: false) {
	@include circle-button-base;
	@if $theme {
		@include circle-button-theme($theme);
	}
}

// Base button styles
// No theme

@mixin circle-button-base {
	@include button-shared;
	margin: 0 auto;
	padding: 0;
	width: 3em;
	height: 3em;
	border-radius: 50%;
	line-height: calc(3em - 2px);
	text-align: center;
}

// Add theme variations

@mixin circle-button-theme($theme) {
	@include button-theme($theme);
}

/**
 * Add button theme
 *
 */

@mixin button-theme($theme) {
	color: map-get($theme, 'color');
	background-color: map-get($theme, 'backgroundColor');
	background-image: map-get($theme, 'backgroundImage');
	border-color: map-get($theme, 'borderColor');

	&:visited {
		color: map-get($theme, 'visitedColor');
	}

	&:hover {
		border-color: map-get($theme, 'hoverBorderColor');
		text-decoration: map-get($theme, 'hoverTextDecoration');
	}

	&:focus {
		border-color: map-get($theme, 'focusBorderColor');
		text-decoration: map-get($theme, 'focusTextDecoration');
	}

	&:hover,
	&:focus {
		color: map-get($theme, 'hoverColor');
		background-color: map-get($theme, 'hoverBackgroundColor');
		background-image: map-get($theme, 'hoverBackgroundImage');

		svg path {
			fill: map-get($theme, 'hoverColor');
		}
	}
}

/**
 * Disabled Button
 *
 */

@mixin button-disabled {
	@include button-theme($button--disabled);
	opacity: map-get($button--disabled, 'opacity');
	cursor: default;
}
